//Переменные

// let - современный способ обозначения переменной, блочная видимость, можно переопределить
// var - устаревший способ обозначения переменной, блочная видимость, нельзя переопределить
// const - можно переопределить, игнорирует область видимости

let name = 'Александр'
var name2 = "Александр"
const NAME = "Александр"

//const принято псать капсом, т.к изнаачально предпалагаем, что изменением переменной const в дальнейшем прроисходить не будет

//Типы данных
//существует 8 типов данных, 7 из них являются ПРИМИТИВНЫМИ

//number - любое число, как целое так и с плавающей точкой
//string - строка
//boolean - true\false
//undefined - переменная не существует
//null - переменная существут, но либо обозначена как null или пуста
//symbol - уникальный индетификатор
//bigint - большое число типа 56n, для целых цисел
//object - для более сложных структур

//Если смотреть по typeof(null) то вернется object, в учебнике написано, что это ошибка

//преобразование в число

//явное - Number(notnum)
//неявное -  +notnum, операторы сравнения, мат.операции

//преобразование в строку

//явное - String(notsting)
//неявное -  конкатенация со строкой notsting + ''


//преобразование в лог.тип

//явное - Boolean(value)
//неявное -  c условием, логическими, тернарными, циклами

//операнд = то к чему применяется опператор
//унарный = применяется к одному опператору
//бинарный = пприменяется к двум оператором
//тернарный = условие ? ответ1 : ответ2

++counter //префиксная форма, плюсуют +1 сразу
counter++ //постфиксная форма, плюсуют +1 после пповторного выведения

++ // инкремент
-- // дикремент

// Постфиксная и префиксная формы
// важность: 5
// Чему будут равны переменные a, b, c и d в примере ниже?
//
    let a = 1, b = 1;

    let c = ++a; // 2
    let d = b++; // 1

// Результат присваивания
// важность: 3
// Чему будут равны переменные a и x после исполнения кода в примере ниже?

    let a = 2;
    let x = 1 + (a *= 2); //5, a*=2 = 4 + 1 = 5


// Преобразование типов
// важность: 5
// Какой результат будет у выражений ниже?

    "" + 1 + 0 //10
    "" - 1 + 0 //-1
    true + false // 1
    6 / "3" // 2
    "2" * "3" // 6
    4 + 5 + "px" //9px
    "$" + 4 + 5 // $45
    "4" - 2 // 2
    "4px" - 2 //NaN
    "  -9  " + 5 // -9 5
    "  -9  " - 5 // -14
    null + 1 //1
    undefined + 1 // NaN
    " \t \n" - 2 //-2 ппо сути это строка. пустая стрка = 0

//null становится 0 после числового преобразования
//undefined становится null после числового ппреобразования

// Исправьте сложение
// важность: 5
// Ниже приведён код, который запрашивает у пользователя два числа и показывает их сумму.
// Он работает неправильно. Код в примере выводит 12 (для значения полей по умолчанию).
// В чём ошибка? Исправьте её. Результат должен быть 3.

let a = prompt("Первое число?", 1);
let b = prompt("Второе число?", 2);

alert(Number(a) + Number(b)); // 3
//или
alert(+a + +b) //3

